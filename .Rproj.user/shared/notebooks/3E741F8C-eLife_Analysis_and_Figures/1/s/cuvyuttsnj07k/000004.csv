"0","# Load the main eLife data file"
"0","elife <- read_excel(""~/Desktop/elife_datafile.xls"")"
"0","# Load the country infomration .csv file, which was manually created and available along with this file"
"0","country_mapping <- read_csv(""elife_countries.csv"")"
"2","Parsed with column specification:
cols(
  Country = col_character(),
  Continent = col_character(),
  Mapping = col_character()
)
"
"0","elife <- elife %>%"
"0","  # This group_by is needed to make the mutate functions work propoerly"
"0","  group_by(MSNO) %>%"
"0","  # these vairbales need to be converted to lowercase for the next step..."
"0","  mutate("
"0","    ca_country = tolower(ca_country),"
"0","    la_country = tolower(la_country),"
"0","    fa_country = tolower(fa_country),"
"0","    bre_country = tolower(bre_country),"
"0","    se_country = tolower(se_country),"
"0","    reviewer1_country = tolower(reviewer1_country),"
"0","    reviewer2_country = tolower(reviewer2_country),"
"0","    reviewer3_country = tolower(reviewer3_country),"
"0","    reviewer4_country = tolower(reviewer4_country)"
"0","  ) %>%"
"0","  # This series of left_joins + mutates + selects is ugly, but it seems one of the most straightforward ways of adding the country mapping values for "
"0","  # each of the author and reviewer types. "
"0","  left_join(country_mapping, by = c(""ca_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    ca_country = Mapping,"
"0","    ca_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""la_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    la_country = Mapping,"
"0","    la_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""fa_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    fa_country = Mapping,"
"0","    fa_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""se_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    se_country = Mapping,"
"0","    se_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""bre_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    bre_country = Mapping,"
"0","    bre_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""reviewer1_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    reviewer1_country = Mapping,"
"0","    reviewer1_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""reviewer2_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    reviewer2_country = Mapping,"
"0","    reviewer2_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""reviewer3_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    reviewer3_country = Mapping,"
"0","    reviewer3_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  left_join(country_mapping, by = c(""reviewer4_country"" = ""Country"")) %>%"
"0","  mutate("
"0","    reviewer4_country = Mapping,"
"0","    reviewer4_continent = Continent"
"0","  ) %>%"
"0","  select(-Mapping, -Continent) %>%"
"0","  # Now I will turn towards the other variables that we will be working with. "
"0","  mutate("
"0","    # convert NA assignments in gender assignment to a value of ""Unknown"" as well as setup factor levels"
"0","    ca_gender = relevel(factor(ifelse(ca_gender %in% c(""M"", ""F""), ca_gender, ifelse(!is.na(ca_name), ""UNK"", NA)), levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    fa_gender = relevel(factor(ifelse(fa_gender %in% c(""M"", ""F""), fa_gender, ifelse(!is.na(fa_name), ""UNK"", NA)), levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    la_gender = relevel(factor(ifelse(la_gender %in% c(""M"", ""F""), la_gender, ifelse(!is.na(la_name), ""UNK"", NA)), levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    se_gender = relevel(factor(ifelse(se_gender %in% c(""M"", ""F""), se_gender, ifelse(!is.na(se_name), ""UNK"", NA)), levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    bre_gender = relevel(factor(ifelse(se_gender %in% c(""M"", ""F""), bre_gender, ifelse(!is.na(bre_name), ""UNK"", NA)), "
"0","                               levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    reviewer1_gender = relevel(factor(ifelse(reviewer1_gender %in% c(""M"", ""F""), reviewer1_gender, ifelse(!is.na(reviewer1_name), ""UNK"", NA)), "
"0","                                      levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    reviewer2_gender = relevel(factor(ifelse(reviewer2_gender %in% c(""M"", ""F""), reviewer2_gender, ifelse(!is.na(reviewer2_name), ""UNK"", NA)), "
"0","                                      levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    reviewer3_gender = relevel(factor(ifelse(reviewer3_gender %in% c(""M"", ""F""), reviewer3_gender, ifelse(!is.na(reviewer3_name), ""UNK"", NA)), "
"0","                                      levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","    reviewer4_gender = relevel(factor(ifelse(reviewer4_gender %in% c(""M"", ""F""), reviewer4_gender, ifelse(!is.na(reviewer4_name), ""UNK"", NA)), "
"0","                                      levels = c(""M"", ""F"", ""UNK"")), ref = ""F""),"
"0","   "
"0","    # Flag the data if there is an initial submission but no decision has been made"
"0","    initial_decision_made = !is.na(initial_decision),"
"0","    "
"0","    # Flag data if full submission has been submitted, but no decision has been made (ie: still in revision or decision stage)"
"0","    full_decision_made = initial_decision != ""Reject"" & last(na.omit(c(full_decision, rev1_decision, rev2_decision))) != ""Revise"","
"0","    "
"0","    # Flag the data if it was appealed at any state during its process"
"0","    appealed_any_stage = any(c(appeal_state1, appeal_state2, appeal_state3) == 4) & any(!is.na(c(appeal_state1, appeal_state2, appeal_state3))),"
"0","    "
"0","    # Flag the data if the initial decision of the manuscript was encouraged"
"0","    encouraged = initial_decision_made & initial_decision == ""Encourage"","
"0","    "
"0","    # Flag the data if the full submission was eventually accepted"
"0","    accepted = full_decision_made & any(c(full_decision, rev1_decision, rev2_decision) == ""Accept"", na.rm = T),"
"0","    "
"0","    # Flag data if there are potential inconsistencies with the naming, ie: no last name for a full submittion but there is a first name"
"0","    #name_inconsistency = full_decision_made & ((!is.na(la_name) & is.na(elife$fa_name)) | ((is.na(la_name) & !is.na(fa_name)))),"
"0","    "
"0","    # This is a list of all the full decisions made (first decision or full submission + subsequent revisions)"
"0","    full_decisions = list(na.omit(c(full_decision, rev1_decision, rev2_decision))),"
"0","    "
"0","    # Add variables related to how long it takes to go through the review process"
"0","    deltatime_rev1 = as.Date(rev1_decision_date) - as.Date(rev1_submission_date),"
"0","    deltatime_rev2 = as.Date(rev2_decision_date) - as.Date(rev2_submission_date),"
"0","    "
"0","    # Store the final stage of the full-submission process in which the final decision was amde"
"0","    final_decision_stage = ifelse(full_decision_made, c(""Full"", ""Rev1"", ""Rev2"")[grep(""Accept|Reject"", unlist(full_decisions))], ""Pending""),"
"0","    "
"0","    # Calculat the total amount of time spent deliberating revision decisions "
"0","    revision_time = ifelse(final_decision_stage == ""Full"", NA, "
"0","                           ifelse(final_decision_stage == ""Rev1"", deltatime_rev1,"
"0","                                  deltatime_rev1 + deltatime_rev2)),"
"0","      "
"0","    # Calculate total amount of time spent deliberating decisions from first full submittion to the final decision"
"0","    deltatime_final = ifelse(final_decision_stage == ""Full"", deltatime_full_submission_decision, "
"0","                             ifelse(final_decision_stage == ""Rev1"", deltatime_rev1 + deltatime_full_submission_decision, "
"0","                                    deltatime_rev2 + deltatime_rev1 + deltatime_full_submission_decision)),"
"0","    "
"0","    # Now add variables relating to the composition of the reviewer team"
"0","    # Quality of list variablesâ€”list of the names, countries, and genders of reviewers"
"0","    reviewer_names = list(tolower(na.omit(c(reviewer1_name, reviewer2_name, reviewer3_name, reviewer4_name)))),"
"0","    reviewer_genders = list(na.omit(c(reviewer1_gender, reviewer2_gender, reviewer3_gender, reviewer4_gender))),"
"0","    reviewer_countries = list(tolower(na.omit(c(reviewer1_country, reviewer2_country, reviewer3_country, reviewer4_country)))),"
"0","    reviewer_continents = list(tolower(na.omit(c(reviewer1_continent, reviewer2_continent, reviewer3_continent, reviewer4_continent)))),"
"0","    "
"0","    # Number of reviewers in the team"
"0","    num_reviewers = length(unlist(reviewer_names)),"
"0","    "
"0","    # Number of reviewers on the team identified as female"
"0","    num_female_reviewers = sum(unlist(reviewer_genders) == 1),"
"0","    # NUmber of reviewers on the team identified as male"
"0","    num_male_reviewers = sum(unlist(reviewer_genders) == 2),"
"0","    "
"0","    # Composition: three variables indicaitng whether all have a gender identified as male, all have a gender identified as female, or there is a mix"
"0","    # of at least one male and one female reviewer on the team"
"0","    composition = factor(ifelse(is.na(full_submission_date), NA, "
"0","                                ifelse(all(unlist(reviewer_genders) == 2), ""All Men"", "
"0","                                       ifelse(all(unlist(reviewer_genders) == 1), ""All Women"", "
"0","                                              ifelse(any(unlist(reviewer_genders) == 1) & any(unlist(reviewer_genders) == 2), ""Mixed"", "
"0","                                                     ""Uncertain"""
"0","                                                     )"
"0","                                              )"
"0","                                       )"
"0","                                ) # end first ifelse"
"0","                         , levels = c(""All Men"", ""All Women"", ""Mixed"", ""Uncertain"")), # end factor"
"0","    # Number of revisions"
"0","    num_revisions = length(unlist(full_decisions)) - 1,"
"0","    # The corresponding author is from the same country as at least one reviewer "
"0","    ca_country_homophily = !is.na(ca_country) & tolower(ca_country) %in% unlist(reviewer_countries),"
"0","    # The last author is from the same country as at least one reviewer"
"0","    la_country_homophily = !is.na(la_country) & tolower(la_country) %in% unlist(reviewer_countries),"
"0","    # The first author is from the same country as at least one reviewer"
"0","    fa_country_homophily = !is.na(fa_country) & tolower(fa_country) %in% unlist(reviewer_countries),"
"0","    "
"0","    # The corresponding author is from the same country as at least one reviewer "
"0","    ca_continent_homophily = !is.na(ca_continent) & tolower(ca_continent) %in% unlist(reviewer_continents),"
"0","    # The last author is from the same country as at least one reviewer"
"0","    la_continent_homophily = !is.na(la_continent) & tolower(la_continent) %in% unlist(reviewer_continents),"
"0","    # The first author is from the same country as at least one reviewer"
"0","    fa_continent_homophily = !is.na(fa_continent) & tolower(fa_continent) %in% unlist(reviewer_continents),"
"0","    "
"0","    # The BRE is also listed as a reviewer"
"0","    bre_is_reviewer = tolower(bre_name) %in% unlist(reviewer_names),"
"0","    "
"0","    # A short series of variables specifying if the first and last authors are the same, or if the CA is also the first/last author"
"0","    ca_is_first = tolower(ca_name) == tolower(fa_name),"
"0","    ca_is_last = tolower(ca_name) == tolower(la_name),"
"0","    single_authored = tolower(fa_name) == tolower(la_name),"
"0","    "
"0","    # this just cleans up a poorly named variable earlier in the preprocessing step"
"0","    submission_type = type.x"
"0","  ) %>%"
"0","  # Now lets remove any identifying information, ie: names and institutions"
"0","  select(-c(ca_name, la_name, fa_name, se_name, bre_name, reviewer1_name, reviewer2_name, reviewer3_name, reviewer4_name, "
"0","         ca_institution, la_institution, fa_institution, se_institution, bre_institution, "
"0","         reviewer1_institution, reviewer2_institution, reviewer3_institution, reviewer4_institution)) %>%"
"0","  # Also, lets remove variables that we will not prefently be working with, just to keep the table clean"
"0","  select(-c(prop_male_reviewers, prop_female_reviewers, appeal_state1, appeal_state2, appeal_state3, type.x, type.y, "
"0","            reviewer_names, reviewer_countries, reviewer_continents, reviewer_genders, full_decisions))"
